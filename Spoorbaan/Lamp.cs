using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Drawing;
using System.Windows.Forms;

namespace Spoorbaan
{
    public class Lamp
    {
        //LampKleur kan eigenlijk alleen Rood of Groen zijn bij een spoorlicht, slecht af te handelen in string.
        //Alle lampen zullen de dezelfde STRAAL hebben, Constant in de Lamp plaatsen
        //Voor een van de unit tests heb ik de uitput van de brush nodig, daarom wordt deze vroeger aangemaakt.
        protected LampKleur kleur;
        private const int STRAAL = 10;
        protected int x;
        protected int y;
        protected LampStatus status;
        protected SolidBrush sb = new SolidBrush(Color.DarkGray);

        //Default Lamp heeft altijd een x en y coordinaat nodig, maar de kleur en status kunnen default zijn.
        public Lamp(int x, int y)
        {
            this.x = x;
            this.y = y;
            kleur = LampKleur.Rood;
            status = LampStatus.Uit;
        }
        //Override method voor als de lamp start kleur moet meekrijgen
        public Lamp(int x, int y,LampKleur lampKleur)
        {
            this.x = x;
            this.y = y;
            this.kleur = lampKleur;
            status = LampStatus.Uit;
        }
        //simpele autogenerated get/set, deze zal vaak voorkomen
        public LampKleur Kleur
        {
            get => kleur;
            set
            {
                kleur = value;
            }
        }

        public LampStatus Status
        {
            get => status;
            set
            {
                status = value;
            }
        }
        //Alleen een get is nodig voor de test, read only gemaakt
        public SolidBrush Sb
        {
            get => sb;
        }
        //Idee is dat er eerst wordt gekeken of de lamp aanstaand voordat de kleur van de lamp wordt gecheckt. Bij het eind van een pad tekenen.
        //Kleur Default situatie zou niet moeten voorkomen omdat kleur gevult wordt in constructor, maar in het geval dat het wel voorkomt is er een opvang.
        public void Teken(Graphics g)
        {
            
            if (status == LampStatus.Aan)
            {
                switch (kleur)
                {
                    case LampKleur.Groen:
                        sb.Color = Color.Green;
                        g.FillEllipse(sb, x, y, STRAAL, STRAAL);
                        
                        break;
                    case LampKleur.Rood:
                        sb.Color = Color.Red;
                        g.FillEllipse(sb, x, y, STRAAL, STRAAL);
                        
                        break;
                    default:
                        sb.Color = Color.Gold;
                        g.FillEllipse(sb, x, y, STRAAL, STRAAL);
                        break;
                }
            }
            else
            {
                g.FillEllipse(sb, x, y, STRAAL, STRAAL);
                
            }
        }
    }
}